---
import Layout from "../../layouts/Layout.astro";
import constituencies from "../../data/constituencies";
import ButtonLink from "../../components/ButtonLink.astro";

// makes static page for each constituency
export function getStaticPaths() {
  const constitStatic = constituencies.map((constituency) => {
    const returnStat = {
      params: {
        constituency: constituency[1],
      },
    };
    return returnStat;
  });
  return constitStatic;
}

// pass constituency variable to the page
const { constituency } = Astro.params;

//
const wpc = constituencies.find(
  (constituencyArray) => constituencyArray[1] === Astro.params.constituency
);

// Make the constituency human readable
const readableConstit = constituency.replace(/\_/g, " ");

// Throttle api calls
function resolveAfterQuartSecond() {
  return new Promise((resolve) => {
    setTimeout(() => {
      resolve("resolved");
    }, 250);
  });
}

//ONS API fetch
const onsCall = async (wpc) => {
  const queryURL =
    "https://api.beta.ons.gov.uk/v1/datasets/TS054/editions/2021/versions/4/json?area-type=wpc," +
    wpc[0];
  const queryDataJson = await fetch(queryURL);
  const queryData = await queryDataJson.json();
  await resolveAfterQuartSecond();
  const data = queryData.observations;
  return data;
};

// ONS variables for jsx
const data = await onsCall(wpc);
const sumStat = data.reduce(
  (accumulator, currentValue) => accumulator + currentValue
);
const rentingStat = data[6] + data[7];
const rentingPercentStat = Math.round((rentingStat / sumStat) * 100);

//Members API Member ID fetch
const members = async (readableConstit) => {
  const queryURL =
    "https://members-api.parliament.uk/api/Location/Constituency/Search?searchText=" +
    readableConstit +
    "&skip=0&take=1";
  const queryDataJson = await fetch(queryURL);
  const queryData = await queryDataJson.json();
  if (queryData.items[0].value.currentRepresentation !== null) {
    const memberID =
      queryData.items[0].value.currentRepresentation.member.value.id;
    return parseInt(memberID);
  } else {
    const memberID = null;
    return memberID;
  }
};

//Members API email fetch
const retrieveEmail = async (memberID) => {
  var queryURL =
    "https://members-api.parliament.uk/api/Members/" + memberID + "/Contact";
  const queryDataJson = await fetch(queryURL);
  const queryData = await queryDataJson.json();
  var email = queryData.value[0].email;
  return email;
};

const member = await members(readableConstit);

const getMpEmail = async () => {
  if (member !== null) {
    const mpEmail = await retrieveEmail(member);
    return mpEmail;
  } else {
    return null;
  }
};
const mpEmail = await getMpEmail();

const getCallToAction = () => {
  if (member !== null) {
    return "LET YOUR MP KNOW";
  } else {
    return "NO CURRENT MP";
  }
};

const callToAction = getCallToAction();
---

<Layout title=`${constituency} Renting Statistics`>
  <main class="w-screen text-xl">
    <section
      class="flex flex-col lg:flex-row gap-10 py-10 text-black justify-center items-center"
    >
      <div
        class="flex flex-row lg:flex-col gap-10 justify-center items-center text-center"
      >
        <div><p>GRAPH</p><p>PLACE</p><p>HOLDER</p></div>
        <p class="text-2xl">
          <strong class="text-6xl font-bold block">{rentingPercentStat}%</strong
          > are renting
        </p>
      </div>
      <div class="flex flex-col gap-5 items-center lg:items-start">
        <div class="flex flex-col gap-2 lg:text-left text-center">
          <p>
            <strong class="text-6xl font-bold">{rentingStat}</strong> rent out of
          </p>
          <p>
            <strong class="text-6xl font-bold"> {sumStat}</strong> people in
          </p>
          <p class="text-5xl font-bold text-wrap max-w-80">
            {readableConstit}
          </p>
        </div>
        <ButtonLink linkText={callToAction} href={`mailto:${mpEmail}`} />
        <a
          href={`${import.meta.env.BASE_URL}/renting/`}
          class="bg-white hover:bg-dark-blue text-dark-blue hover:text-white border-dark-blue border underline font-bold py-2 px-4 focus:outline-none focus:shadow-outline max-w-80 w-full text-center"
        >
          SEARCH AGAIN
        </a>
      </div>
    </section>
  </main>
</Layout>
